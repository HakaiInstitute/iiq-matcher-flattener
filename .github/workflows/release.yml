name: Release Tauri App for Windows

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Rust
        run: |
          rustup update stable
          rustup default stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ${{ github.workspace }}/src-tauri/target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Install dependencies
        run: npm ci

      - name: Build Tauri app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ""
        run: npm run tauri build

      - name: Generate latest.json
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          $NSIS_INSTALLER = Get-ChildItem src-tauri\target\release\bundle\nsis\*.zip | Select-Object -First 1
          $SIGNATURE = Get-Content src-tauri\target\release\bundle\nsis\*.sig -Raw
          $LATEST_JSON = @{
            version = $VERSION
            notes = "See the assets to download this version and install."
            pub_date = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
            platforms = @{
              "windows-x86_64" = @{
                signature = $SIGNATURE
                url = "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/$($NSIS_INSTALLER.Name)"
              }
            }
          }
          $LATEST_JSON | ConvertTo-Json -Depth 5 | Out-File -FilePath latest.json

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          gh release create $VERSION --draft --title "Release $VERSION" --generate-notes

      - name: Upload Windows NSIS Installer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          $NSIS_INSTALLER = Get-ChildItem src-tauri\target\release\bundle\nsis\*.exe | Select-Object -First 1
          gh release upload $VERSION $NSIS_INSTALLER.FullName

      - name: Upload latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          gh release upload $VERSION latest.json