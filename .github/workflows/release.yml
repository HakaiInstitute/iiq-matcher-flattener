name: Release Tauri App for Windows

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.OS }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-rust-

      - name: Install dependencies
        run: npm ci

      - name: Build Tauri app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        run: npm run tauri build

      - name: Generate checksum
        run: |
          $NSIS_INSTALLER = Get-ChildItem src-tauri\target\release\bundle\nsis\*.exe | Select-Object -First 1
          $NSIS_CHECKSUM = Get-FileHash $NSIS_INSTALLER -Algorithm SHA256
          "$($NSIS_CHECKSUM.Hash)  $($NSIS_INSTALLER.Name)" | Out-File -FilePath checksum.txt -Append

      - name: Generate latest.json
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          $NSIS_INSTALLER = Get-ChildItem src-tauri\target\release\bundle\nsis\*.exe | Select-Object -First 1
          $LATEST_JSON = @{
            version = $VERSION
            notes = "See the assets to download this version and install."
            pub_date = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
            platforms = @{
              "windows-x86_64" = @{
                signature = ""
                url = "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/$($NSIS_INSTALLER.Name)"
              }
            }
          }
          $LATEST_JSON | ConvertTo-Json -Depth 5 | Out-File -FilePath latest.json

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          gh release create $VERSION --draft --title "Release $VERSION" --generate-notes

      - name: Upload Windows NSIS Installer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          $NSIS_INSTALLER = Get-ChildItem src-tauri\target\release\bundle\nsis\*.exe | Select-Object -First 1
          gh release upload $VERSION $NSIS_INSTALLER.FullName

      - name: Upload Checksum
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          gh release upload $VERSION checksum.txt

      - name: Upload latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/', ''
          gh release upload $VERSION latest.json